from net import Packet
from hike import drop, allow


__eth_proto_type_abs_off = 12
__ipv6_hop_lim_abs_off = 21


def mychain1():
    eth_type = Packet.readU16(__eth_proto_type_abs_off)
    if (eth_type == 0x800):
        drop(eth_type)
        return
    
    if (eth_type == 0x86dd):
        hop_lim = Packet.readU8(__ipv6_hop_lim_abs_off)
        if hop_lim != 64:
            allow(eth_type)
            return
        Packet.writeU8(__ipv6_hop_lim_abs_off,17) 
    

def mychain2():
    allow = 1
    eth_type = Packet.readU16(__eth_proto_type_abs_off)

    if eth_type == 0x800 :
        allow = 0
        mychain5(allow, eth_type)
        return

    if eth_type == 0x86dd :
        hop_lim = Packet.readU8(__ipv6_hop_lim_abs_off)
        if hop_lim != 64:
            mychain5(allow, eth_type)
            return
        Packet.writeU8(__ipv6_hop_lim_abs_off,17) 
    

#def mychain3():
#    /* explicit access to registers for retrieving passed arguments */
#    __asm__("%[d0] = r2 \t\n"
#            "%[d1] = r3 \t\n"
#            : [d0] "=r"(allow), [d1] "=r"(eth_type)
#            :
#            : "r2", "r3");
#    if allow == true:
#        prog_id = allow()
#    else:
#        prog_id = drop()
#    prog_id(eth_type)


def mychain5(allow, eth_type):
    if allow == true:
        prog_id = allow()
    else:
        prog_id = drop()
    prog_id(eth_type)